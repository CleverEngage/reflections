What happens when you initialize a repository? Why do you need to do it?

    Git create an empety repository in a hidden directory named .git with 
    empety commits. Because I need to apply version control to my files and
    git version control need this action to store meta-data about my 
    repository such as traking files, commits, etc.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

    Staging area has the file or files that are ready to be in the commit. Working 
    directory has information related to the files in the repository, such as files that 
    is new, removed, updated, tracked, untracked, stage or unstaged. The repository has
    all the git commits. Staging area give us flexibility to choose which
    files need to be in the commit.

How can you use the staging area to make sure you have one commit per logical
change?

    By staging the files that are related to the one logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

    If I want to make some change but I do not want to change the current 
    code, so I can make branches to divert from main branch and do
    whatever I want without effecting the code in the main branch.

    Some of the situations that are helpful to use branches are:
        - New feature
        - Experimental
        - Fix a bug

How do the diagrams help you visualize the branch structure?

    Answer

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

    Answer

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

    Answer